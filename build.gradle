
buildscript {
    repositories {
        mavenCentral()
        gradlePluginPortal()
    }
}
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'java'
//apply plugin: 'org.spongepowered.mixin'

version = "${mod_version}"
group = mod_base_package
archivesBaseName = mod_id



java.toolchain.languageVersion = JavaLanguageVersion.of(21)


repositories {
    maven {
        name 'Cleanroom Maven'
        url 'https://maven.cleanroommc.com/'
    }
    maven {
        url "https://repo.cleanroommc.com/snapshots"
    }
    mavenCentral()
}

ext {
    // Do not change the order unless it is required so
    lwjglLibraries = [
            [
                    'lwjgl3-glfw', 'lwjgl3-jemalloc', 'lwjgl3-openal',
                    'lwjgl3-opengl', 'lwjgl3-stb', 'lwjgl3-tinyfd', 'lwjgl3'
            ]
    ]
}

dependencies {
    lwjglLibraries[0].each {
        compileOnly "org.lwjgl3:$it:3.3.4-27-CLEANROOM"
    }
    compileOnly 'org.apache.commons:commons-lang3:3.17.0'
    compileOnly 'com.google.code.findbugs:jsr305:3.0.2'

}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

jar {
    exclude("net/**")
    manifest {
        attributes([
                'Specification-Title': mod_id,
                'Specification-Vendor': mod_authors,
                'Specification-Version': '1', // We are version 1 of ourselves
                'Implementation-Title': project.name,
                'Implementation-Version': mod_version,
                'Implementation-Vendor': mod_authors,
                'Implementation-Timestamp': new Date().format('yyyy-MM-dd\'T\'HH:mm:ssZ')
        ])
    }
}


publishing {
    repositories {
        maven {
            name = "outlands"
            url = "https://maven.outlands.top/releases"
            credentials(PasswordCredentials)
            authentication {
                basic(BasicAuthentication)
            }
        }
    }
    publications {
        maven(MavenPublication) {
            groupId = "com.cleanroommc"
            artifactId = "lwjglxx"
            version = mod_version
            from components.java
        }
    }
}
